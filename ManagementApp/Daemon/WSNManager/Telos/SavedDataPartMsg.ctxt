#BlueJ class context
comment0.params=
comment0.target=SavedDataPartMsg()
comment0.text=Create\ a\ new\ SavedDataPartMsg\ of\ size\ 22.
comment1.params=data_length
comment1.target=SavedDataPartMsg(int)
comment1.text=Create\ a\ new\ SavedDataPartMsg\ of\ the\ given\ data_length.
comment10.params=
comment10.target=boolean\ isArray_len()
comment10.text=\n\ Return\ whether\ the\ field\ 'len'\ is\ an\ array\ (false).\n
comment11.params=
comment11.target=int\ offset_len()
comment11.text=\n\ Return\ the\ offset\ (in\ bytes)\ of\ the\ field\ 'len'\n
comment12.params=
comment12.target=int\ offsetBits_len()
comment12.text=\n\ Return\ the\ offset\ (in\ bits)\ of\ the\ field\ 'len'\n
comment13.params=
comment13.target=short\ get_len()
comment13.text=\n\ Return\ the\ value\ (as\ a\ short)\ of\ the\ field\ 'len'\n
comment14.params=value
comment14.target=void\ set_len(short)
comment14.text=\n\ Set\ the\ value\ of\ the\ field\ 'len'\n
comment15.params=
comment15.target=int\ size_len()
comment15.text=\n\ Return\ the\ size,\ in\ bytes,\ of\ the\ field\ 'len'\n
comment16.params=
comment16.target=int\ sizeBits_len()
comment16.text=\n\ Return\ the\ size,\ in\ bits,\ of\ the\ field\ 'len'\n
comment17.params=
comment17.target=boolean\ isSigned_key()
comment17.text=\n\ Return\ whether\ the\ field\ 'key'\ is\ signed\ (false).\n
comment18.params=
comment18.target=boolean\ isArray_key()
comment18.text=\n\ Return\ whether\ the\ field\ 'key'\ is\ an\ array\ (false).\n
comment19.params=
comment19.target=int\ offset_key()
comment19.text=\n\ Return\ the\ offset\ (in\ bytes)\ of\ the\ field\ 'key'\n
comment2.params=data_length\ base_offset
comment2.target=SavedDataPartMsg(int,\ int)
comment2.text=\n\ Create\ a\ new\ SavedDataPartMsg\ with\ the\ given\ data_length\n\ and\ base\ offset.\n
comment20.params=
comment20.target=int\ offsetBits_key()
comment20.text=\n\ Return\ the\ offset\ (in\ bits)\ of\ the\ field\ 'key'\n
comment21.params=
comment21.target=short\ get_key()
comment21.text=\n\ Return\ the\ value\ (as\ a\ short)\ of\ the\ field\ 'key'\n
comment22.params=value
comment22.target=void\ set_key(short)
comment22.text=\n\ Set\ the\ value\ of\ the\ field\ 'key'\n
comment23.params=
comment23.target=int\ size_key()
comment23.text=\n\ Return\ the\ size,\ in\ bytes,\ of\ the\ field\ 'key'\n
comment24.params=
comment24.target=int\ sizeBits_key()
comment24.text=\n\ Return\ the\ size,\ in\ bits,\ of\ the\ field\ 'key'\n
comment25.params=
comment25.target=boolean\ isSigned_data()
comment25.text=\n\ Return\ whether\ the\ field\ 'data'\ is\ signed\ (false).\n
comment26.params=
comment26.target=boolean\ isArray_data()
comment26.text=\n\ Return\ whether\ the\ field\ 'data'\ is\ an\ array\ (true).\n
comment27.params=index1
comment27.target=int\ offset_data(int)
comment27.text=\n\ Return\ the\ offset\ (in\ bytes)\ of\ the\ field\ 'data'\n
comment28.params=index1
comment28.target=int\ offsetBits_data(int)
comment28.text=\n\ Return\ the\ offset\ (in\ bits)\ of\ the\ field\ 'data'\n
comment29.params=
comment29.target=short[]\ get_data()
comment29.text=\n\ Return\ the\ entire\ array\ 'data'\ as\ a\ short[]\n
comment3.params=data
comment3.target=SavedDataPartMsg(byte[])
comment3.text=\n\ Create\ a\ new\ SavedDataPartMsg\ using\ the\ given\ byte\ array\n\ as\ backing\ store.\n
comment30.params=value
comment30.target=void\ set_data(short[])
comment30.text=\n\ Set\ the\ contents\ of\ the\ array\ 'data'\ from\ the\ given\ short[]\n
comment31.params=index1
comment31.target=short\ getElement_data(int)
comment31.text=\n\ Return\ an\ element\ (as\ a\ short)\ of\ the\ array\ 'data'\n
comment32.params=index1\ value
comment32.target=void\ setElement_data(int,\ short)
comment32.text=\n\ Set\ an\ element\ of\ the\ array\ 'data'\n
comment33.params=
comment33.target=int\ totalSize_data()
comment33.text=\n\ Return\ the\ total\ size,\ in\ bytes,\ of\ the\ array\ 'data'\n
comment34.params=
comment34.target=int\ totalSizeBits_data()
comment34.text=\n\ Return\ the\ total\ size,\ in\ bits,\ of\ the\ array\ 'data'\n
comment35.params=
comment35.target=int\ elementSize_data()
comment35.text=\n\ Return\ the\ size,\ in\ bytes,\ of\ each\ element\ of\ the\ array\ 'data'\n
comment36.params=
comment36.target=int\ elementSizeBits_data()
comment36.text=\n\ Return\ the\ size,\ in\ bits,\ of\ each\ element\ of\ the\ array\ 'data'\n
comment37.params=
comment37.target=int\ numDimensions_data()
comment37.text=\n\ Return\ the\ number\ of\ dimensions\ in\ the\ array\ 'data'\n
comment38.params=
comment38.target=int\ numElements_data()
comment38.text=\n\ Return\ the\ number\ of\ elements\ in\ the\ array\ 'data'\n
comment39.params=dimension
comment39.target=int\ numElements_data(int)
comment39.text=\n\ Return\ the\ number\ of\ elements\ in\ the\ array\ 'data'\n\ for\ the\ given\ dimension.\n
comment4.params=data\ base_offset
comment4.target=SavedDataPartMsg(byte[],\ int)
comment4.text=\n\ Create\ a\ new\ SavedDataPartMsg\ using\ the\ given\ byte\ array\n\ as\ backing\ store,\ with\ the\ given\ base\ offset.\n
comment40.params=s
comment40.target=void\ setString_data(java.lang.String)
comment40.text=\n\ Fill\ in\ the\ array\ 'data'\ with\ a\ String\n
comment41.params=
comment41.target=java.lang.String\ getString_data()
comment41.text=\n\ Read\ the\ array\ 'data'\ as\ a\ String\n
comment5.params=data\ base_offset\ data_length
comment5.target=SavedDataPartMsg(byte[],\ int,\ int)
comment5.text=\n\ Create\ a\ new\ SavedDataPartMsg\ using\ the\ given\ byte\ array\n\ as\ backing\ store,\ with\ the\ given\ base\ offset\ and\ data\ length.\n
comment6.params=msg\ base_offset
comment6.target=SavedDataPartMsg(net.tinyos.message.Message,\ int)
comment6.text=\n\ Create\ a\ new\ SavedDataPartMsg\ embedded\ in\ the\ given\ message\n\ at\ the\ given\ base\ offset.\n
comment7.params=msg\ base_offset\ data_length
comment7.target=SavedDataPartMsg(net.tinyos.message.Message,\ int,\ int)
comment7.text=\n\ Create\ a\ new\ SavedDataPartMsg\ embedded\ in\ the\ given\ message\n\ at\ the\ given\ base\ offset\ and\ length.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ \ \ \ /*\ Return\ a\ String\ representation\ of\ this\ message.\ Includes\ the\n\ message\ type\ name\ and\ the\ non-indexed\ field\ values.\n
comment9.params=
comment9.target=boolean\ isSigned_len()
comment9.text=\n\ Return\ whether\ the\ field\ 'len'\ is\ signed\ (false).\n
numComments=42
